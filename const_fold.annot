"const_fold.ml" 7 73 81 "const_fold.ml" 7 73 91
type(
  (string * Knorm.name list) list ->
  (string * Syntax.const) list -> Knorm.kexp -> Knorm.kexp
)
ident(
  def const_fold "const_fold.ml" 7 73 73 "const_fold.ml" 1 0 -1
)
"const_fold.ml" 7 73 92 "const_fold.ml" 7 73 100
type(
  (string * Knorm.name list) list
)
ident(
  def tupleenv "const_fold.ml" 7 73 101 "const_fold.ml" 70 1972 2004
)
"const_fold.ml" 7 73 101 "const_fold.ml" 7 73 105
type(
  (string * Syntax.const) list
)
ident(
  def cenv "const_fold.ml" 7 73 106 "const_fold.ml" 70 1972 2004
)
"const_fold.ml" 7 73 106 "const_fold.ml" 7 73 109
type(
  Knorm.kexp
)
ident(
  def ast "const_fold.ml" 8 113 114 "const_fold.ml" 70 1972 2004
)
"const_fold.ml" 8 113 118 "const_fold.ml" 8 113 125
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  def reccall "const_fold.ml" 9 156 157 "const_fold.ml" 70 1972 2004
)
"const_fold.ml" 8 113 128 "const_fold.ml" 8 113 138
type(
  (string * Knorm.name list) list ->
  (string * Syntax.const) list -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref const_fold "const_fold.ml" 7 73 81 "const_fold.ml" 7 73 91
)
"const_fold.ml" 8 113 139 "const_fold.ml" 8 113 147
type(
  (string * Knorm.name list) list
)
ident(
  int_ref tupleenv "const_fold.ml" 7 73 92 "const_fold.ml" 7 73 100
)
"const_fold.ml" 8 113 148 "const_fold.ml" 8 113 152
type(
  (string * Syntax.const) list
)
ident(
  int_ref cenv "const_fold.ml" 7 73 101 "const_fold.ml" 7 73 105
)
"const_fold.ml" 8 113 128 "const_fold.ml" 8 113 152
call(
  stack
)
type(
  Knorm.kexp -> Knorm.kexp
)
"const_fold.ml" 9 156 161 "const_fold.ml" 9 156 168
type(
  Syntax.optype -> Knorm.name list -> Knorm.kexp
)
ident(
  def op_fold "const_fold.ml" 53 1537 1538 "const_fold.ml" 70 1972 2004
)
"const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
type(
  Syntax.optype
)
ident(
  def op "const_fold.ml" 9 156 172 "const_fold.ml" 51 1500 1532
)
"const_fold.ml" 9 156 172 "const_fold.ml" 9 156 174
type(
  Knorm.name list
)
ident(
  def vs "const_fold.ml" 10 178 180 "const_fold.ml" 51 1500 1532
)
"const_fold.ml" 11 184 191 "const_fold.ml" 11 184 194
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
ident(
  def tvs "const_fold.ml" 11 184 296 "const_fold.ml" 50 1495 1499
)
"const_fold.ml" 11 184 197 "const_fold.ml" 11 184 205
type(
  (Knorm.name ->
   (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either) ->
  Knorm.name list ->
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
ident(
  ext_ref List.map
)
"const_fold.ml" 11 184 213 "const_fold.ml" 11 184 215
type(
  string
)
ident(
  def na "const_fold.ml" 11 184 230 "const_fold.ml" 11 184 287
)
"const_fold.ml" 11 184 216 "const_fold.ml" 11 184 217
type(
  Type_checker.ty * Debug.debug_data
)
"const_fold.ml" 11 184 212 "const_fold.ml" 11 184 218
type(
  Knorm.name
)
"const_fold.ml" 11 184 222 "const_fold.ml" 11 184 225
ident(
  def nad "const_fold.ml" 11 184 230 "const_fold.ml" 11 184 287
)
"const_fold.ml" 11 184 211 "const_fold.ml" 11 184 226
type(
  Knorm.name
)
"const_fold.ml" 11 184 239 "const_fold.ml" 11 184 249
type(
  string -> (string * Syntax.const) list -> Syntax.const
)
ident(
  ext_ref List.assoc
)
"const_fold.ml" 11 184 250 "const_fold.ml" 11 184 252
type(
  string
)
ident(
  int_ref na "const_fold.ml" 11 184 213 "const_fold.ml" 11 184 215
)
"const_fold.ml" 11 184 253 "const_fold.ml" 11 184 257
type(
  (string * Syntax.const) list
)
ident(
  int_ref cenv "const_fold.ml" 7 73 101 "const_fold.ml" 7 73 105
)
"const_fold.ml" 11 184 238 "const_fold.ml" 11 184 258
call(
  stack
)
type(
  Syntax.const
)
"const_fold.ml" 11 184 234 "const_fold.ml" 11 184 258
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 11 184 264 "const_fold.ml" 11 184 273
type(
  exn
)
"const_fold.ml" 11 184 282 "const_fold.ml" 11 184 287
type(
  string * (Type_checker.ty * Debug.debug_data)
)
ident(
  int_ref nad "const_fold.ml" 11 184 211 "const_fold.ml" 11 184 226
)
"const_fold.ml" 11 184 277 "const_fold.ml" 11 184 287
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 11 184 230 "const_fold.ml" 11 184 287
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 11 184 206 "const_fold.ml" 11 184 289
type(
  Knorm.name ->
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 11 184 290 "const_fold.ml" 11 184 292
type(
  Knorm.name list
)
ident(
  int_ref vs "const_fold.ml" 9 156 172 "const_fold.ml" 9 156 174
)
"const_fold.ml" 11 184 197 "const_fold.ml" 11 184 292
call(
  stack
)
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 12 298 308 "const_fold.ml" 12 298 311
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
ident(
  int_ref tvs "const_fold.ml" 11 184 191 "const_fold.ml" 11 184 194
)
"const_fold.ml" 13 317 334 "const_fold.ml" 13 317 335
type(
  int
)
ident(
  def x "const_fold.ml" 13 317 341 "const_fold.ml" 17 454 486
)
"const_fold.ml" 13 317 328 "const_fold.ml" 13 317 336
type(
  Syntax.const
)
"const_fold.ml" 13 317 324 "const_fold.ml" 13 317 336
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 13 317 323 "const_fold.ml" 13 317 337
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 14 354 366 "const_fold.ml" 14 354 368
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 15 374 381 "const_fold.ml" 15 374 387
type(
  Syntax.optype
)
"const_fold.ml" 15 374 396 "const_fold.ml" 15 374 397
type(
  int
)
ident(
  def x "const_fold.ml" 15 374 401 "const_fold.ml" 15 374 403
)
"const_fold.ml" 15 374 401 "const_fold.ml" 15 374 402
type(
  int -> int
)
ident(
  ext_ref Pervasives.( ~- )
)
"const_fold.ml" 15 374 402 "const_fold.ml" 15 374 403
type(
  int
)
ident(
  int_ref x "const_fold.ml" 15 374 396 "const_fold.ml" 15 374 397
)
"const_fold.ml" 15 374 401 "const_fold.ml" 15 374 403
type(
  int
)
"const_fold.ml" 15 374 391 "const_fold.ml" 15 374 404
type(
  int -> int
)
"const_fold.ml" 16 405 412 "const_fold.ml" 16 405 416
type(
  Syntax.optype
)
"const_fold.ml" 16 405 425 "const_fold.ml" 16 405 426
type(
  int
)
ident(
  def x "const_fold.ml" 16 405 430 "const_fold.ml" 16 405 452
)
"const_fold.ml" 16 405 433 "const_fold.ml" 16 405 434
type(
  int
)
ident(
  int_ref x "const_fold.ml" 16 405 425 "const_fold.ml" 16 405 426
)
"const_fold.ml" 16 405 435 "const_fold.ml" 16 405 436
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"const_fold.ml" 16 405 437 "const_fold.ml" 16 405 438
type(
  int
)
"const_fold.ml" 16 405 433 "const_fold.ml" 16 405 438
type(
  bool
)
"const_fold.ml" 16 405 444 "const_fold.ml" 16 405 445
type(
  int
)
"const_fold.ml" 16 405 451 "const_fold.ml" 16 405 452
type(
  int
)
"const_fold.ml" 16 405 430 "const_fold.ml" 16 405 452
type(
  int
)
"const_fold.ml" 16 405 420 "const_fold.ml" 16 405 453
type(
  int -> int
)
"const_fold.ml" 17 454 461 "const_fold.ml" 17 454 462
type(
  Syntax.optype
)
"const_fold.ml" 17 454 466 "const_fold.ml" 17 454 471
type(
  exn -> int -> int
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 17 454 472 "const_fold.ml" 17 454 481
type(
  exn
)
"const_fold.ml" 17 454 466 "const_fold.ml" 17 454 481
type(
  int -> int
)
"const_fold.ml" 14 354 359 "const_fold.ml" 17 454 482
type(
  int -> int
)
"const_fold.ml" 17 454 483 "const_fold.ml" 17 454 484
type(
  int
)
ident(
  int_ref x "const_fold.ml" 13 317 334 "const_fold.ml" 13 317 335
)
"const_fold.ml" 13 317 352 "const_fold.ml" 17 454 485
call(
  stack
)
type(
  int
)
"const_fold.ml" 13 317 347 "const_fold.ml" 17 454 486
type(
  Syntax.const
)
"const_fold.ml" 13 317 341 "const_fold.ml" 17 454 486
type(
  Knorm.kexp
)
"const_fold.ml" 18 487 504 "const_fold.ml" 18 487 505
type(
  int
)
ident(
  def x "const_fold.ml" 18 487 524 "const_fold.ml" 30 941 975
)
"const_fold.ml" 18 487 498 "const_fold.ml" 18 487 506
type(
  Syntax.const
)
"const_fold.ml" 18 487 494 "const_fold.ml" 18 487 506
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 18 487 517 "const_fold.ml" 18 487 518
type(
  int
)
ident(
  def y "const_fold.ml" 18 487 524 "const_fold.ml" 30 941 975
)
"const_fold.ml" 18 487 511 "const_fold.ml" 18 487 519
type(
  Syntax.const
)
"const_fold.ml" 18 487 507 "const_fold.ml" 18 487 519
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 18 487 493 "const_fold.ml" 18 487 520
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 19 537 549 "const_fold.ml" 19 537 551
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 20 557 564 "const_fold.ml" 20 557 568
type(
  Syntax.optype
)
"const_fold.ml" 20 557 572 "const_fold.ml" 20 557 575
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"const_fold.ml" 21 576 583 "const_fold.ml" 21 576 587
type(
  Syntax.optype
)
"const_fold.ml" 21 576 591 "const_fold.ml" 21 576 594
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( - )
)
"const_fold.ml" 22 595 602 "const_fold.ml" 22 595 606
type(
  Syntax.optype
)
"const_fold.ml" 22 595 610 "const_fold.ml" 22 595 615
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( * )
)
"const_fold.ml" 23 616 623 "const_fold.ml" 23 616 627
type(
  Syntax.optype
)
"const_fold.ml" 23 616 631 "const_fold.ml" 23 616 634
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( / )
)
"const_fold.ml" 24 635 642 "const_fold.ml" 24 635 645
type(
  Syntax.optype
)
"const_fold.ml" 24 635 654 "const_fold.ml" 24 635 655
type(
  int
)
ident(
  def x "const_fold.ml" 24 635 656 "const_fold.ml" 24 635 683
)
"const_fold.ml" 24 635 656 "const_fold.ml" 24 635 657
type(
  int
)
ident(
  def y "const_fold.ml" 24 635 661 "const_fold.ml" 24 635 683
)
"const_fold.ml" 24 635 664 "const_fold.ml" 24 635 665
type(
  int
)
ident(
  int_ref x "const_fold.ml" 24 635 654 "const_fold.ml" 24 635 655
)
"const_fold.ml" 24 635 666 "const_fold.ml" 24 635 667
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"const_fold.ml" 24 635 668 "const_fold.ml" 24 635 669
type(
  int
)
ident(
  int_ref y "const_fold.ml" 24 635 656 "const_fold.ml" 24 635 657
)
"const_fold.ml" 24 635 664 "const_fold.ml" 24 635 669
type(
  bool
)
"const_fold.ml" 24 635 675 "const_fold.ml" 24 635 676
type(
  int
)
"const_fold.ml" 24 635 682 "const_fold.ml" 24 635 683
type(
  int
)
"const_fold.ml" 24 635 661 "const_fold.ml" 24 635 683
type(
  int
)
"const_fold.ml" 24 635 649 "const_fold.ml" 24 635 684
type(
  int -> int -> int
)
"const_fold.ml" 25 685 692 "const_fold.ml" 25 685 696
type(
  Syntax.optype
)
"const_fold.ml" 25 685 705 "const_fold.ml" 25 685 706
type(
  int
)
ident(
  def x "const_fold.ml" 25 685 707 "const_fold.ml" 25 685 735
)
"const_fold.ml" 25 685 707 "const_fold.ml" 25 685 708
type(
  int
)
ident(
  def y "const_fold.ml" 25 685 712 "const_fold.ml" 25 685 735
)
"const_fold.ml" 25 685 715 "const_fold.ml" 25 685 716
type(
  int
)
ident(
  int_ref x "const_fold.ml" 25 685 705 "const_fold.ml" 25 685 706
)
"const_fold.ml" 25 685 717 "const_fold.ml" 25 685 719
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"const_fold.ml" 25 685 720 "const_fold.ml" 25 685 721
type(
  int
)
ident(
  int_ref y "const_fold.ml" 25 685 707 "const_fold.ml" 25 685 708
)
"const_fold.ml" 25 685 715 "const_fold.ml" 25 685 721
type(
  bool
)
"const_fold.ml" 25 685 727 "const_fold.ml" 25 685 728
type(
  int
)
"const_fold.ml" 25 685 734 "const_fold.ml" 25 685 735
type(
  int
)
"const_fold.ml" 25 685 712 "const_fold.ml" 25 685 735
type(
  int
)
"const_fold.ml" 25 685 700 "const_fold.ml" 25 685 736
type(
  int -> int -> int
)
"const_fold.ml" 26 737 744 "const_fold.ml" 26 737 747
type(
  Syntax.optype
)
"const_fold.ml" 26 737 756 "const_fold.ml" 26 737 757
type(
  int
)
ident(
  def x "const_fold.ml" 26 737 758 "const_fold.ml" 26 737 785
)
"const_fold.ml" 26 737 758 "const_fold.ml" 26 737 759
type(
  int
)
ident(
  def y "const_fold.ml" 26 737 763 "const_fold.ml" 26 737 785
)
"const_fold.ml" 26 737 766 "const_fold.ml" 26 737 767
type(
  int
)
ident(
  int_ref x "const_fold.ml" 26 737 756 "const_fold.ml" 26 737 757
)
"const_fold.ml" 26 737 768 "const_fold.ml" 26 737 769
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"const_fold.ml" 26 737 770 "const_fold.ml" 26 737 771
type(
  int
)
ident(
  int_ref y "const_fold.ml" 26 737 758 "const_fold.ml" 26 737 759
)
"const_fold.ml" 26 737 766 "const_fold.ml" 26 737 771
type(
  bool
)
"const_fold.ml" 26 737 777 "const_fold.ml" 26 737 778
type(
  int
)
"const_fold.ml" 26 737 784 "const_fold.ml" 26 737 785
type(
  int
)
"const_fold.ml" 26 737 763 "const_fold.ml" 26 737 785
type(
  int
)
"const_fold.ml" 26 737 751 "const_fold.ml" 26 737 786
type(
  int -> int -> int
)
"const_fold.ml" 27 787 794 "const_fold.ml" 27 787 797
type(
  Syntax.optype
)
"const_fold.ml" 27 787 806 "const_fold.ml" 27 787 807
type(
  int
)
ident(
  def x "const_fold.ml" 27 787 808 "const_fold.ml" 27 787 835
)
"const_fold.ml" 27 787 808 "const_fold.ml" 27 787 809
type(
  int
)
ident(
  def y "const_fold.ml" 27 787 813 "const_fold.ml" 27 787 835
)
"const_fold.ml" 27 787 816 "const_fold.ml" 27 787 817
type(
  int
)
ident(
  int_ref x "const_fold.ml" 27 787 806 "const_fold.ml" 27 787 807
)
"const_fold.ml" 27 787 818 "const_fold.ml" 27 787 819
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"const_fold.ml" 27 787 820 "const_fold.ml" 27 787 821
type(
  int
)
ident(
  int_ref y "const_fold.ml" 27 787 808 "const_fold.ml" 27 787 809
)
"const_fold.ml" 27 787 816 "const_fold.ml" 27 787 821
type(
  bool
)
"const_fold.ml" 27 787 827 "const_fold.ml" 27 787 828
type(
  int
)
"const_fold.ml" 27 787 834 "const_fold.ml" 27 787 835
type(
  int
)
"const_fold.ml" 27 787 813 "const_fold.ml" 27 787 835
type(
  int
)
"const_fold.ml" 27 787 801 "const_fold.ml" 27 787 836
type(
  int -> int -> int
)
"const_fold.ml" 28 837 844 "const_fold.ml" 28 837 848
type(
  Syntax.optype
)
"const_fold.ml" 28 837 857 "const_fold.ml" 28 837 858
type(
  int
)
ident(
  def x "const_fold.ml" 28 837 859 "const_fold.ml" 28 837 887
)
"const_fold.ml" 28 837 859 "const_fold.ml" 28 837 860
type(
  int
)
ident(
  def y "const_fold.ml" 28 837 864 "const_fold.ml" 28 837 887
)
"const_fold.ml" 28 837 867 "const_fold.ml" 28 837 868
type(
  int
)
ident(
  int_ref x "const_fold.ml" 28 837 857 "const_fold.ml" 28 837 858
)
"const_fold.ml" 28 837 869 "const_fold.ml" 28 837 871
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
"const_fold.ml" 28 837 872 "const_fold.ml" 28 837 873
type(
  int
)
ident(
  int_ref y "const_fold.ml" 28 837 859 "const_fold.ml" 28 837 860
)
"const_fold.ml" 28 837 867 "const_fold.ml" 28 837 873
type(
  bool
)
"const_fold.ml" 28 837 879 "const_fold.ml" 28 837 880
type(
  int
)
"const_fold.ml" 28 837 886 "const_fold.ml" 28 837 887
type(
  int
)
"const_fold.ml" 28 837 864 "const_fold.ml" 28 837 887
type(
  int
)
"const_fold.ml" 28 837 852 "const_fold.ml" 28 837 888
type(
  int -> int -> int
)
"const_fold.ml" 29 889 896 "const_fold.ml" 29 889 900
type(
  Syntax.optype
)
"const_fold.ml" 29 889 909 "const_fold.ml" 29 889 910
type(
  int
)
ident(
  def x "const_fold.ml" 29 889 911 "const_fold.ml" 29 889 939
)
"const_fold.ml" 29 889 911 "const_fold.ml" 29 889 912
type(
  int
)
ident(
  def y "const_fold.ml" 29 889 916 "const_fold.ml" 29 889 939
)
"const_fold.ml" 29 889 919 "const_fold.ml" 29 889 920
type(
  int
)
ident(
  int_ref x "const_fold.ml" 29 889 909 "const_fold.ml" 29 889 910
)
"const_fold.ml" 29 889 921 "const_fold.ml" 29 889 923
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"const_fold.ml" 29 889 924 "const_fold.ml" 29 889 925
type(
  int
)
ident(
  int_ref y "const_fold.ml" 29 889 911 "const_fold.ml" 29 889 912
)
"const_fold.ml" 29 889 919 "const_fold.ml" 29 889 925
type(
  bool
)
"const_fold.ml" 29 889 931 "const_fold.ml" 29 889 932
type(
  int
)
"const_fold.ml" 29 889 938 "const_fold.ml" 29 889 939
type(
  int
)
"const_fold.ml" 29 889 916 "const_fold.ml" 29 889 939
type(
  int
)
"const_fold.ml" 29 889 904 "const_fold.ml" 29 889 940
type(
  int -> int -> int
)
"const_fold.ml" 30 941 948 "const_fold.ml" 30 941 949
type(
  Syntax.optype
)
"const_fold.ml" 30 941 953 "const_fold.ml" 30 941 958
type(
  exn -> int -> int -> int
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 30 941 959 "const_fold.ml" 30 941 968
type(
  exn
)
"const_fold.ml" 30 941 953 "const_fold.ml" 30 941 968
type(
  int -> int -> int
)
"const_fold.ml" 19 537 542 "const_fold.ml" 30 941 969
type(
  int -> int -> int
)
"const_fold.ml" 30 941 970 "const_fold.ml" 30 941 971
type(
  int
)
ident(
  int_ref x "const_fold.ml" 18 487 504 "const_fold.ml" 18 487 505
)
"const_fold.ml" 30 941 972 "const_fold.ml" 30 941 973
type(
  int
)
ident(
  int_ref y "const_fold.ml" 18 487 517 "const_fold.ml" 18 487 518
)
"const_fold.ml" 18 487 535 "const_fold.ml" 30 941 974
call(
  stack
)
type(
  int
)
"const_fold.ml" 18 487 530 "const_fold.ml" 30 941 975
type(
  Syntax.const
)
"const_fold.ml" 18 487 524 "const_fold.ml" 30 941 975
type(
  Knorm.kexp
)
"const_fold.ml" 31 976 993 "const_fold.ml" 31 976 994
type(
  int
)
ident(
  def x "const_fold.ml" 31 976 1011 "const_fold.ml" 35 1098 1104
)
"const_fold.ml" 31 976 987 "const_fold.ml" 31 976 995
type(
  Syntax.const
)
"const_fold.ml" 31 976 983 "const_fold.ml" 31 976 995
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 31 976 1002 "const_fold.ml" 31 976 1005
ident(
  def nad "const_fold.ml" 31 976 1011 "const_fold.ml" 35 1098 1104
)
"const_fold.ml" 31 976 1001 "const_fold.ml" 31 976 1006
type(
  string * (Type_checker.ty * Debug.debug_data)
)
"const_fold.ml" 31 976 996 "const_fold.ml" 31 976 1006
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 31 976 982 "const_fold.ml" 31 976 1007
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 32 1013 1025 "const_fold.ml" 32 1013 1027
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 33 1033 1041 "const_fold.ml" 33 1033 1045
type(
  Syntax.optype
)
"const_fold.ml" 33 1033 1058 "const_fold.ml" 33 1033 1061
type(
  int
)
ident(
  int_ref x "const_fold.ml" 31 976 993 "const_fold.ml" 31 976 994
)
"const_fold.ml" 33 1033 1053 "const_fold.ml" 33 1033 1061
type(
  Syntax.optype
)
"const_fold.ml" 33 1033 1063 "const_fold.ml" 33 1033 1066
type(
  Knorm.name
)
ident(
  int_ref nad "const_fold.ml" 31 976 1001 "const_fold.ml" 31 976 1006
)
"const_fold.ml" 33 1033 1062 "const_fold.ml" 33 1033 1067
type(
  Knorm.name list
)
"const_fold.ml" 33 1033 1049 "const_fold.ml" 33 1033 1068
type(
  Knorm.kexp
)
"const_fold.ml" 34 1069 1077 "const_fold.ml" 34 1069 1078
type(
  Syntax.optype
)
"const_fold.ml" 34 1069 1082 "const_fold.ml" 34 1069 1087
type(
  exn -> Knorm.kexp
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 34 1069 1088 "const_fold.ml" 34 1069 1097
type(
  exn
)
"const_fold.ml" 34 1069 1082 "const_fold.ml" 34 1069 1097
type(
  Knorm.kexp
)
"const_fold.ml" 31 976 1011 "const_fold.ml" 35 1098 1104
type(
  Knorm.kexp
)
"const_fold.ml" 36 1105 1118 "const_fold.ml" 36 1105 1121
ident(
  def nad "const_fold.ml" 36 1105 1140 "const_fold.ml" 41 1265 1271
)
"const_fold.ml" 36 1105 1117 "const_fold.ml" 36 1105 1122
type(
  string * (Type_checker.ty * Debug.debug_data)
)
"const_fold.ml" 36 1105 1112 "const_fold.ml" 36 1105 1122
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 36 1105 1133 "const_fold.ml" 36 1105 1134
type(
  int
)
ident(
  def x "const_fold.ml" 36 1105 1140 "const_fold.ml" 41 1265 1271
)
"const_fold.ml" 36 1105 1127 "const_fold.ml" 36 1105 1135
type(
  Syntax.const
)
"const_fold.ml" 36 1105 1123 "const_fold.ml" 36 1105 1135
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 36 1105 1111 "const_fold.ml" 36 1105 1136
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 37 1142 1154 "const_fold.ml" 37 1142 1156
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 38 1162 1170 "const_fold.ml" 38 1162 1174
type(
  Syntax.optype
)
"const_fold.ml" 38 1162 1187 "const_fold.ml" 38 1162 1190
type(
  int
)
ident(
  int_ref x "const_fold.ml" 36 1105 1133 "const_fold.ml" 36 1105 1134
)
"const_fold.ml" 38 1162 1182 "const_fold.ml" 38 1162 1190
type(
  Syntax.optype
)
"const_fold.ml" 38 1162 1192 "const_fold.ml" 38 1162 1195
type(
  Knorm.name
)
ident(
  int_ref nad "const_fold.ml" 36 1105 1117 "const_fold.ml" 36 1105 1122
)
"const_fold.ml" 38 1162 1191 "const_fold.ml" 38 1162 1196
type(
  Knorm.name list
)
"const_fold.ml" 38 1162 1178 "const_fold.ml" 38 1162 1197
type(
  Knorm.kexp
)
"const_fold.ml" 39 1198 1206 "const_fold.ml" 39 1198 1210
type(
  Syntax.optype
)
"const_fold.ml" 39 1198 1225 "const_fold.ml" 39 1198 1228
type(
  int
)
ident(
  int_ref x "const_fold.ml" 36 1105 1133 "const_fold.ml" 36 1105 1134
)
"const_fold.ml" 39 1198 1218 "const_fold.ml" 39 1198 1228
type(
  Syntax.optype
)
"const_fold.ml" 39 1198 1230 "const_fold.ml" 39 1198 1233
type(
  Knorm.name
)
ident(
  int_ref nad "const_fold.ml" 36 1105 1117 "const_fold.ml" 36 1105 1122
)
"const_fold.ml" 39 1198 1229 "const_fold.ml" 39 1198 1234
type(
  Knorm.name list
)
"const_fold.ml" 39 1198 1214 "const_fold.ml" 39 1198 1235
type(
  Knorm.kexp
)
"const_fold.ml" 40 1236 1244 "const_fold.ml" 40 1236 1245
type(
  Syntax.optype
)
"const_fold.ml" 40 1236 1249 "const_fold.ml" 40 1236 1254
type(
  exn -> Knorm.kexp
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 40 1236 1255 "const_fold.ml" 40 1236 1264
type(
  exn
)
"const_fold.ml" 40 1236 1249 "const_fold.ml" 40 1236 1264
type(
  Knorm.kexp
)
"const_fold.ml" 36 1105 1140 "const_fold.ml" 41 1265 1271
type(
  Knorm.kexp
)
"const_fold.ml" 42 1272 1291 "const_fold.ml" 42 1272 1292
type(
  float
)
ident(
  def x "const_fold.ml" 42 1272 1313 "const_fold.ml" 48 1433 1467
)
"const_fold.ml" 42 1272 1283 "const_fold.ml" 42 1272 1293
type(
  Syntax.const
)
"const_fold.ml" 42 1272 1279 "const_fold.ml" 42 1272 1293
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 42 1272 1306 "const_fold.ml" 42 1272 1307
type(
  float
)
ident(
  def y "const_fold.ml" 42 1272 1313 "const_fold.ml" 48 1433 1467
)
"const_fold.ml" 42 1272 1298 "const_fold.ml" 42 1272 1308
type(
  Syntax.const
)
"const_fold.ml" 42 1272 1294 "const_fold.ml" 42 1272 1308
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either
)
"const_fold.ml" 42 1272 1278 "const_fold.ml" 42 1272 1309
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 43 1328 1340 "const_fold.ml" 43 1328 1342
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 44 1348 1355 "const_fold.ml" 44 1348 1360
type(
  Syntax.optype
)
"const_fold.ml" 44 1348 1364 "const_fold.ml" 44 1348 1368
type(
  float -> float -> float
)
ident(
  ext_ref Pervasives.( +. )
)
"const_fold.ml" 45 1369 1376 "const_fold.ml" 45 1369 1381
type(
  Syntax.optype
)
"const_fold.ml" 45 1369 1385 "const_fold.ml" 45 1369 1389
type(
  float -> float -> float
)
ident(
  ext_ref Pervasives.( -. )
)
"const_fold.ml" 46 1390 1397 "const_fold.ml" 46 1390 1402
type(
  Syntax.optype
)
"const_fold.ml" 46 1390 1406 "const_fold.ml" 46 1390 1411
type(
  float -> float -> float
)
ident(
  ext_ref Pervasives.( *. )
)
"const_fold.ml" 47 1412 1419 "const_fold.ml" 47 1412 1424
type(
  Syntax.optype
)
"const_fold.ml" 47 1412 1428 "const_fold.ml" 47 1412 1432
type(
  float -> float -> float
)
ident(
  ext_ref Pervasives.( /. )
)
"const_fold.ml" 48 1433 1440 "const_fold.ml" 48 1433 1441
type(
  Syntax.optype
)
"const_fold.ml" 48 1433 1445 "const_fold.ml" 48 1433 1450
type(
  exn -> float -> float -> float
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 48 1433 1451 "const_fold.ml" 48 1433 1460
type(
  exn
)
"const_fold.ml" 48 1433 1445 "const_fold.ml" 48 1433 1460
type(
  float -> float -> float
)
"const_fold.ml" 43 1328 1333 "const_fold.ml" 48 1433 1461
type(
  float -> float -> float
)
"const_fold.ml" 48 1433 1462 "const_fold.ml" 48 1433 1463
type(
  float
)
ident(
  int_ref x "const_fold.ml" 42 1272 1291 "const_fold.ml" 42 1272 1292
)
"const_fold.ml" 48 1433 1464 "const_fold.ml" 48 1433 1465
type(
  float
)
ident(
  int_ref y "const_fold.ml" 42 1272 1306 "const_fold.ml" 42 1272 1307
)
"const_fold.ml" 42 1272 1326 "const_fold.ml" 48 1433 1466
call(
  stack
)
type(
  float
)
"const_fold.ml" 42 1272 1319 "const_fold.ml" 48 1433 1467
type(
  Syntax.const
)
"const_fold.ml" 42 1272 1313 "const_fold.ml" 48 1433 1467
type(
  Knorm.kexp
)
"const_fold.ml" 49 1468 1474 "const_fold.ml" 49 1468 1475
type(
  (Syntax.const, string * (Type_checker.ty * Debug.debug_data)) either list
)
"const_fold.ml" 49 1468 1479 "const_fold.ml" 49 1468 1484
type(
  exn -> Knorm.kexp
)
ident(
  ext_ref Pervasives.raise
)
"const_fold.ml" 49 1468 1485 "const_fold.ml" 49 1468 1494
type(
  exn
)
"const_fold.ml" 49 1468 1479 "const_fold.ml" 49 1468 1494
type(
  Knorm.kexp
)
"const_fold.ml" 11 184 296 "const_fold.ml" 50 1495 1499
type(
  Knorm.kexp
)
"const_fold.ml" 11 184 187 "const_fold.ml" 50 1495 1499
type(
  Knorm.kexp
)
"const_fold.ml" 51 1500 1509 "const_fold.ml" 51 1500 1518
type(
  exn
)
"const_fold.ml" 51 1500 1526 "const_fold.ml" 51 1500 1528
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 9 156 169 "const_fold.ml" 9 156 171
)
"const_fold.ml" 51 1500 1529 "const_fold.ml" 51 1500 1531
type(
  Knorm.name list
)
ident(
  int_ref vs "const_fold.ml" 9 156 172 "const_fold.ml" 9 156 174
)
"const_fold.ml" 51 1500 1522 "const_fold.ml" 51 1500 1532
type(
  Knorm.kexp
)
"const_fold.ml" 10 178 180 "const_fold.ml" 51 1500 1532
type(
  Knorm.kexp
)
"const_fold.ml" 53 1537 1544 "const_fold.ml" 53 1537 1547
type(
  Knorm.kexp
)
ident(
  int_ref ast "const_fold.ml" 7 73 106 "const_fold.ml" 7 73 109
)
"const_fold.ml" 54 1553 1570 "const_fold.ml" 54 1553 1571
ident(
  def i "const_fold.ml" 54 1553 1586 "const_fold.ml" 60 1691 1694
)
"const_fold.ml" 54 1553 1569 "const_fold.ml" 54 1553 1572
type(
  int
)
"const_fold.ml" 54 1553 1560 "const_fold.ml" 54 1553 1572
type(
  Syntax.optype
)
"const_fold.ml" 54 1553 1575 "const_fold.ml" 54 1553 1577
type(
  string
)
ident(
  def na "const_fold.ml" 54 1553 1586 "const_fold.ml" 60 1691 1694
)
"const_fold.ml" 54 1553 1578 "const_fold.ml" 54 1553 1579
type(
  Type_checker.ty * Debug.debug_data
)
"const_fold.ml" 54 1553 1574 "const_fold.ml" 54 1553 1580
type(
  Knorm.name
)
"const_fold.ml" 54 1553 1573 "const_fold.ml" 54 1553 1581
type(
  Knorm.name list
)
"const_fold.ml" 54 1553 1556 "const_fold.ml" 54 1553 1582
type(
  Knorm.kexp
)
"const_fold.ml" 56 1596 1604 "const_fold.ml" 56 1596 1606
type(
  Knorm.name list
)
ident(
  def vs "const_fold.ml" 57 1635 1640 "const_fold.ml" 57 1635 1659
)
"const_fold.ml" 56 1596 1609 "const_fold.ml" 56 1596 1619
type(
  string -> (string * Knorm.name list) list -> Knorm.name list
)
ident(
  ext_ref List.assoc
)
"const_fold.ml" 56 1596 1620 "const_fold.ml" 56 1596 1622
type(
  string
)
ident(
  int_ref na "const_fold.ml" 54 1553 1575 "const_fold.ml" 54 1553 1577
)
"const_fold.ml" 56 1596 1623 "const_fold.ml" 56 1596 1631
type(
  (string * Knorm.name list) list
)
ident(
  int_ref tupleenv "const_fold.ml" 7 73 92 "const_fold.ml" 7 73 100
)
"const_fold.ml" 56 1596 1609 "const_fold.ml" 56 1596 1631
call(
  stack
)
type(
  Knorm.name list
)
"const_fold.ml" 57 1635 1645 "const_fold.ml" 57 1635 1653
type(
  Knorm.name list -> int -> Knorm.name
)
ident(
  ext_ref List.nth
)
"const_fold.ml" 57 1635 1654 "const_fold.ml" 57 1635 1656
type(
  Knorm.name list
)
ident(
  int_ref vs "const_fold.ml" 56 1596 1604 "const_fold.ml" 56 1596 1606
)
"const_fold.ml" 57 1635 1657 "const_fold.ml" 57 1635 1658
type(
  int
)
ident(
  int_ref i "const_fold.ml" 54 1553 1569 "const_fold.ml" 54 1553 1572
)
"const_fold.ml" 57 1635 1644 "const_fold.ml" 57 1635 1659
call(
  stack
)
type(
  Knorm.name
)
"const_fold.ml" 57 1635 1640 "const_fold.ml" 57 1635 1659
type(
  Knorm.kexp
)
"const_fold.ml" 56 1596 1600 "const_fold.ml" 57 1635 1659
type(
  Knorm.kexp
)
"const_fold.ml" 59 1668 1674 "const_fold.ml" 59 1668 1683
type(
  exn
)
"const_fold.ml" 59 1668 1687 "const_fold.ml" 59 1668 1690
type(
  Knorm.kexp
)
ident(
  int_ref ast "const_fold.ml" 7 73 106 "const_fold.ml" 7 73 109
)
"const_fold.ml" 54 1553 1586 "const_fold.ml" 60 1691 1694
type(
  Knorm.kexp
)
"const_fold.ml" 61 1695 1704 "const_fold.ml" 61 1695 1706
type(
  string
)
ident(
  def na "const_fold.ml" 61 1695 1728 "const_fold.ml" 68 1937 1940
)
"const_fold.ml" 61 1695 1707 "const_fold.ml" 61 1695 1708
type(
  Type_checker.ty * Debug.debug_data
)
"const_fold.ml" 61 1695 1703 "const_fold.ml" 61 1695 1709
type(
  Knorm.name
)
"const_fold.ml" 61 1695 1713 "const_fold.ml" 61 1695 1717
ident(
  def natd "const_fold.ml" 61 1695 1728 "const_fold.ml" 68 1937 1940
)
"const_fold.ml" 61 1695 1703 "const_fold.ml" 61 1695 1717
type(
  Knorm.name
)
"const_fold.ml" 61 1695 1718 "const_fold.ml" 61 1695 1720
type(
  Knorm.kexp
)
ident(
  def e1 "const_fold.ml" 61 1695 1728 "const_fold.ml" 68 1937 1940
)
"const_fold.ml" 61 1695 1721 "const_fold.ml" 61 1695 1723
type(
  Knorm.kexp
)
ident(
  def e2 "const_fold.ml" 61 1695 1728 "const_fold.ml" 68 1937 1940
)
"const_fold.ml" 61 1695 1698 "const_fold.ml" 61 1695 1724
type(
  Knorm.kexp
)
"const_fold.ml" 62 1730 1737 "const_fold.ml" 62 1730 1740
type(
  Knorm.kexp
)
ident(
  def te1 "const_fold.ml" 63 1757 1760 "const_fold.ml" 67 1913 1936
)
"const_fold.ml" 62 1730 1743 "const_fold.ml" 62 1730 1750
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref reccall "const_fold.ml" 8 113 118 "const_fold.ml" 8 113 125
)
"const_fold.ml" 62 1730 1751 "const_fold.ml" 62 1730 1753
type(
  Knorm.kexp
)
ident(
  int_ref e1 "const_fold.ml" 61 1695 1718 "const_fold.ml" 61 1695 1720
)
"const_fold.ml" 62 1730 1743 "const_fold.ml" 62 1730 1753
call(
  stack
)
type(
  Knorm.kexp
)
"const_fold.ml" 63 1757 1765 "const_fold.ml" 63 1757 1769
type(
  Knorm.name
)
ident(
  int_ref natd "const_fold.ml" 61 1695 1703 "const_fold.ml" 61 1695 1717
)
"const_fold.ml" 63 1757 1770 "const_fold.ml" 63 1757 1773
type(
  Knorm.kexp
)
ident(
  int_ref te1 "const_fold.ml" 62 1730 1737 "const_fold.ml" 62 1730 1740
)
"const_fold.ml" 64 1776 1786 "const_fold.ml" 64 1776 1789
type(
  Knorm.kexp
)
ident(
  int_ref te1 "const_fold.ml" 62 1730 1737 "const_fold.ml" 62 1730 1740
)
"const_fold.ml" 65 1795 1808 "const_fold.ml" 65 1795 1810
type(
  Knorm.name list
)
ident(
  def vs "const_fold.ml" 65 1795 1814 "const_fold.ml" 65 1795 1854
)
"const_fold.ml" 65 1795 1801 "const_fold.ml" 65 1795 1810
type(
  Knorm.kexp
)
"const_fold.ml" 65 1795 1814 "const_fold.ml" 65 1795 1824
type(
  (string * Knorm.name list) list ->
  (string * Syntax.const) list -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref const_fold "const_fold.ml" 7 73 81 "const_fold.ml" 7 73 91
)
"const_fold.ml" 65 1795 1827 "const_fold.ml" 65 1795 1829
type(
  string
)
ident(
  int_ref na "const_fold.ml" 61 1695 1704 "const_fold.ml" 61 1695 1706
)
"const_fold.ml" 65 1795 1830 "const_fold.ml" 65 1795 1832
type(
  Knorm.name list
)
ident(
  int_ref vs "const_fold.ml" 65 1795 1808 "const_fold.ml" 65 1795 1810
)
"const_fold.ml" 65 1795 1826 "const_fold.ml" 65 1795 1833
type(
  string * Knorm.name list
)
"const_fold.ml" 65 1795 1837 "const_fold.ml" 65 1795 1845
type(
  (string * Knorm.name list) list
)
ident(
  int_ref tupleenv "const_fold.ml" 7 73 92 "const_fold.ml" 7 73 100
)
"const_fold.ml" 65 1795 1825 "const_fold.ml" 65 1795 1846
type(
  (string * Knorm.name list) list
)
"const_fold.ml" 65 1795 1847 "const_fold.ml" 65 1795 1851
type(
  (string * Syntax.const) list
)
ident(
  int_ref cenv "const_fold.ml" 7 73 101 "const_fold.ml" 7 73 105
)
"const_fold.ml" 65 1795 1852 "const_fold.ml" 65 1795 1854
type(
  Knorm.kexp
)
ident(
  int_ref e2 "const_fold.ml" 61 1695 1721 "const_fold.ml" 61 1695 1723
)
"const_fold.ml" 65 1795 1814 "const_fold.ml" 65 1795 1854
call(
  stack
)
type(
  Knorm.kexp
)
"const_fold.ml" 66 1855 1868 "const_fold.ml" 66 1855 1869
type(
  Syntax.const
)
ident(
  def c "const_fold.ml" 66 1855 1873 "const_fold.ml" 66 1855 1912
)
"const_fold.ml" 66 1855 1861 "const_fold.ml" 66 1855 1869
type(
  Knorm.kexp
)
"const_fold.ml" 66 1855 1873 "const_fold.ml" 66 1855 1883
type(
  (string * Knorm.name list) list ->
  (string * Syntax.const) list -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref const_fold "const_fold.ml" 7 73 81 "const_fold.ml" 7 73 91
)
"const_fold.ml" 66 1855 1884 "const_fold.ml" 66 1855 1892
type(
  (string * Knorm.name list) list
)
ident(
  int_ref tupleenv "const_fold.ml" 7 73 92 "const_fold.ml" 7 73 100
)
"const_fold.ml" 66 1855 1895 "const_fold.ml" 66 1855 1897
type(
  string
)
ident(
  int_ref na "const_fold.ml" 61 1695 1704 "const_fold.ml" 61 1695 1706
)
"const_fold.ml" 66 1855 1898 "const_fold.ml" 66 1855 1899
type(
  Syntax.const
)
ident(
  int_ref c "const_fold.ml" 66 1855 1868 "const_fold.ml" 66 1855 1869
)
"const_fold.ml" 66 1855 1894 "const_fold.ml" 66 1855 1900
type(
  string * Syntax.const
)
"const_fold.ml" 66 1855 1904 "const_fold.ml" 66 1855 1908
type(
  (string * Syntax.const) list
)
ident(
  int_ref cenv "const_fold.ml" 7 73 101 "const_fold.ml" 7 73 105
)
"const_fold.ml" 66 1855 1893 "const_fold.ml" 66 1855 1909
type(
  (string * Syntax.const) list
)
"const_fold.ml" 66 1855 1910 "const_fold.ml" 66 1855 1912
type(
  Knorm.kexp
)
ident(
  int_ref e2 "const_fold.ml" 61 1695 1721 "const_fold.ml" 61 1695 1723
)
"const_fold.ml" 66 1855 1873 "const_fold.ml" 66 1855 1912
call(
  stack
)
type(
  Knorm.kexp
)
"const_fold.ml" 67 1913 1919 "const_fold.ml" 67 1913 1920
type(
  Knorm.kexp
)
"const_fold.ml" 67 1913 1924 "const_fold.ml" 67 1913 1931
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref reccall "const_fold.ml" 8 113 118 "const_fold.ml" 8 113 125
)
"const_fold.ml" 67 1913 1932 "const_fold.ml" 67 1913 1934
type(
  Knorm.kexp
)
ident(
  int_ref e2 "const_fold.ml" 61 1695 1721 "const_fold.ml" 61 1695 1723
)
"const_fold.ml" 67 1913 1924 "const_fold.ml" 67 1913 1934
type(
  Knorm.kexp
)
"const_fold.ml" 63 1757 1774 "const_fold.ml" 67 1913 1935
type(
  Knorm.kexp
)
"const_fold.ml" 63 1757 1760 "const_fold.ml" 67 1913 1936
type(
  Knorm.kexp
)
"const_fold.ml" 61 1695 1728 "const_fold.ml" 68 1937 1940
type(
  Knorm.kexp
)
"const_fold.ml" 69 1941 1948 "const_fold.ml" 69 1941 1950
type(
  Syntax.optype
)
ident(
  def op "const_fold.ml" 69 1941 1958 "const_fold.ml" 69 1941 1971
)
"const_fold.ml" 69 1941 1951 "const_fold.ml" 69 1941 1953
type(
  Knorm.name list
)
ident(
  def vs "const_fold.ml" 69 1941 1958 "const_fold.ml" 69 1941 1971
)
"const_fold.ml" 69 1941 1944 "const_fold.ml" 69 1941 1954
type(
  Knorm.kexp
)
"const_fold.ml" 69 1941 1958 "const_fold.ml" 69 1941 1965
type(
  Syntax.optype -> Knorm.name list -> Knorm.kexp
)
ident(
  int_ref op_fold "const_fold.ml" 9 156 161 "const_fold.ml" 9 156 168
)
"const_fold.ml" 69 1941 1966 "const_fold.ml" 69 1941 1968
type(
  Syntax.optype
)
ident(
  int_ref op "const_fold.ml" 69 1941 1948 "const_fold.ml" 69 1941 1950
)
"const_fold.ml" 69 1941 1969 "const_fold.ml" 69 1941 1971
type(
  Knorm.name list
)
ident(
  int_ref vs "const_fold.ml" 69 1941 1951 "const_fold.ml" 69 1941 1953
)
"const_fold.ml" 69 1941 1958 "const_fold.ml" 69 1941 1971
call(
  tail
)
type(
  Knorm.kexp
)
"const_fold.ml" 70 1972 1975 "const_fold.ml" 70 1972 1976
type(
  Knorm.kexp
)
"const_fold.ml" 70 1972 1980 "const_fold.ml" 70 1972 1992
type(
  (Knorm.kexp -> Knorm.kexp) -> Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Knorm.kexp_recconv
)
"const_fold.ml" 70 1972 1993 "const_fold.ml" 70 1972 2000
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref reccall "const_fold.ml" 8 113 118 "const_fold.ml" 8 113 125
)
"const_fold.ml" 70 1972 2001 "const_fold.ml" 70 1972 2004
type(
  Knorm.kexp
)
ident(
  int_ref ast "const_fold.ml" 7 73 106 "const_fold.ml" 7 73 109
)
"const_fold.ml" 70 1972 1980 "const_fold.ml" 70 1972 2004
type(
  Knorm.kexp
)
"const_fold.ml" 53 1537 1538 "const_fold.ml" 70 1972 2004
type(
  Knorm.kexp
)
"const_fold.ml" 9 156 157 "const_fold.ml" 70 1972 2004
type(
  Knorm.kexp
)
"const_fold.ml" 8 113 114 "const_fold.ml" 70 1972 2004
type(
  Knorm.kexp
)
"const_fold.ml" 72 2006 2010 "const_fold.ml" 72 2006 2016
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  def folder "const_fold.ml" 72 2006 2043 "const_fold.ml" 1 0 -1
)
"const_fold.ml" 72 2006 2017 "const_fold.ml" 72 2006 2020
type(
  Knorm.kexp
)
ident(
  def ast "const_fold.ml" 72 2006 2023 "const_fold.ml" 72 2006 2043
)
"const_fold.ml" 72 2006 2023 "const_fold.ml" 72 2006 2033
type(
  (string * Knorm.name list) list ->
  (string * Syntax.const) list -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref const_fold "const_fold.ml" 7 73 81 "const_fold.ml" 7 73 91
)
"const_fold.ml" 72 2006 2034 "const_fold.ml" 72 2006 2036
type(
  (string * Knorm.name list) list
)
"const_fold.ml" 72 2006 2037 "const_fold.ml" 72 2006 2039
type(
  (string * Syntax.const) list
)
"const_fold.ml" 72 2006 2040 "const_fold.ml" 72 2006 2043
type(
  Knorm.kexp
)
ident(
  int_ref ast "const_fold.ml" 72 2006 2017 "const_fold.ml" 72 2006 2020
)
"const_fold.ml" 72 2006 2023 "const_fold.ml" 72 2006 2043
call(
  tail
)
type(
  Knorm.kexp
)
