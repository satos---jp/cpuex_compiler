"main.ml" 21 314 318 "main.ml" 21 314 330
type(
  (Knorm.kexp -> Knorm.kexp) list
)
ident(
  def reduce_funcs "main.ml" 31 476 476 "main.ml" 1 0 -1
)
"main.ml" 22 335 336 "main.ml" 22 335 350
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Inline.inliner
)
"main.ml" 23 352 353 "main.ml" 23 352 364
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Assoc.assoc
)
"main.ml" 24 366 367 "main.ml" 24 366 386
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Remove_tuple.remove
)
"main.ml" 25 388 389 "main.ml" 25 388 406
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Const_fold.folder
)
"main.ml" 26 408 409 "main.ml" 26 408 432
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Common_sube_elim.elimer
)
"main.ml" 27 434 435 "main.ml" 27 434 445
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Beta.beter
)
"main.ml" 28 447 448 "main.ml" 28 447 471
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Elim_unused.elim_unused
)
"main.ml" 21 314 333 "main.ml" 29 473 474
type(
  (Knorm.kexp -> Knorm.kexp) list
)
"main.ml" 31 476 480 "main.ml" 31 476 491
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  def reduce_step "main.ml" 47 1033 1033 "main.ml" 1 0 -1
)
"main.ml" 31 476 492 "main.ml" 31 476 495
type(
  Knorm.kexp
)
ident(
  def ast "main.ml" 31 476 498 "main.ml" 31 476 553
)
"main.ml" 31 476 498 "main.ml" 31 476 512
type(
  (Knorm.kexp -> (Knorm.kexp -> Knorm.kexp) -> Knorm.kexp) ->
  Knorm.kexp -> (Knorm.kexp -> Knorm.kexp) list -> Knorm.kexp
)
ident(
  ext_ref List.fold_left
)
"main.ml" 31 476 518 "main.ml" 31 476 519
type(
  Knorm.kexp
)
ident(
  def r "main.ml" 31 476 523 "main.ml" 31 476 535
)
"main.ml" 31 476 527 "main.ml" 31 476 528
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  def f "main.ml" 31 476 532 "main.ml" 31 476 535
)
"main.ml" 31 476 532 "main.ml" 31 476 533
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref f "main.ml" 31 476 527 "main.ml" 31 476 528
)
"main.ml" 31 476 534 "main.ml" 31 476 535
type(
  Knorm.kexp
)
ident(
  int_ref r "main.ml" 31 476 518 "main.ml" 31 476 519
)
"main.ml" 31 476 532 "main.ml" 31 476 535
call(
  tail
)
type(
  Knorm.kexp
)
"main.ml" 31 476 523 "main.ml" 31 476 535
type(
  (Knorm.kexp -> Knorm.kexp) -> Knorm.kexp
)
"main.ml" 31 476 513 "main.ml" 31 476 536
type(
  Knorm.kexp -> (Knorm.kexp -> Knorm.kexp) -> Knorm.kexp
)
"main.ml" 31 476 537 "main.ml" 31 476 540
type(
  Knorm.kexp
)
ident(
  int_ref ast "main.ml" 31 476 492 "main.ml" 31 476 495
)
"main.ml" 31 476 541 "main.ml" 31 476 553
type(
  (Knorm.kexp -> Knorm.kexp) list
)
ident(
  int_ref reduce_funcs "main.ml" 21 314 318 "main.ml" 21 314 330
)
"main.ml" 31 476 498 "main.ml" 31 476 553
call(
  tail
)
type(
  Knorm.kexp
)
"main.ml" 47 1033 1037 "main.ml" 47 1033 1043
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  def reduce "main.ml" 59 1272 1272 "main.ml" 1 0 -1
)
"main.ml" 47 1033 1044 "main.ml" 47 1033 1047
type(
  Knorm.kexp
)
ident(
  def ast "main.ml" 48 1051 1052 "main.ml" 57 1268 1270
)
"main.ml" 48 1051 1055 "main.ml" 48 1051 1056
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 48 1051 1056 "main.ml" 48 1051 1070
type(
  bool ref
)
ident(
  ext_ref Main_option.nooptimization
)
"main.ml" 48 1051 1055 "main.ml" 48 1051 1070
type(
  bool
)
"main.ml" 48 1051 1076 "main.ml" 48 1051 1079
type(
  Knorm.kexp
)
ident(
  int_ref ast "main.ml" 47 1033 1044 "main.ml" 47 1033 1047
)
"main.ml" 49 1087 1097 "main.ml" 49 1087 1098
type(
  int -> Knorm.kexp -> Knorm.kexp
)
ident(
  def f "main.ml" 48 1051 1085 "main.ml" 57 1268 1270
)
"main.ml" 49 1087 1099 "main.ml" 49 1087 1100
type(
  int
)
ident(
  def i "main.ml" 49 1087 1101 "main.ml" 54 1237 1251
)
"main.ml" 49 1087 1101 "main.ml" 49 1087 1105
type(
  Knorm.kexp
)
ident(
  def nast "main.ml" 50 1109 1112 "main.ml" 54 1237 1251
)
"main.ml" 50 1109 1115 "main.ml" 50 1109 1116
type(
  int
)
ident(
  int_ref i "main.ml" 49 1087 1099 "main.ml" 49 1087 1100
)
"main.ml" 50 1109 1117 "main.ml" 50 1109 1118
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"main.ml" 50 1109 1119 "main.ml" 50 1109 1120
type(
  int
)
"main.ml" 50 1109 1115 "main.ml" 50 1109 1120
type(
  bool
)
"main.ml" 51 1128 1136 "main.ml" 51 1128 1140
type(
  Knorm.kexp
)
ident(
  def tast "main.ml" 52 1163 1167 "main.ml" 53 1220 1236
)
"main.ml" 51 1128 1143 "main.ml" 51 1128 1154
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref reduce_step "main.ml" 31 476 480 "main.ml" 31 476 491
)
"main.ml" 51 1128 1155 "main.ml" 51 1128 1159
type(
  Knorm.kexp
)
ident(
  int_ref nast "main.ml" 49 1087 1101 "main.ml" 49 1087 1105
)
"main.ml" 51 1128 1143 "main.ml" 51 1128 1159
call(
  stack
)
type(
  Knorm.kexp
)
"main.ml" 52 1163 1167 "main.ml" 52 1163 1180
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 52 1163 1181 "main.ml" 52 1163 1197
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 52 1163 1198 "main.ml" 52 1163 1199
type(
  int
)
ident(
  int_ref i "main.ml" 49 1087 1099 "main.ml" 49 1087 1100
)
"main.ml" 52 1163 1167 "main.ml" 52 1163 1199
call(
  stack
)
type(
  unit
)
"main.ml" 52 1163 1202 "main.ml" 52 1163 1215
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 52 1163 1216 "main.ml" 52 1163 1218
type(
  unit
)
"main.ml" 52 1163 1202 "main.ml" 52 1163 1218
call(
  stack
)
type(
  unit
)
"main.ml" 53 1220 1224 "main.ml" 53 1220 1225
type(
  int -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref f "main.ml" 49 1087 1097 "main.ml" 49 1087 1098
)
"main.ml" 53 1220 1227 "main.ml" 53 1220 1228
type(
  int
)
ident(
  int_ref i "main.ml" 49 1087 1099 "main.ml" 49 1087 1100
)
"main.ml" 53 1220 1228 "main.ml" 53 1220 1229
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"main.ml" 53 1220 1229 "main.ml" 53 1220 1230
type(
  int
)
"main.ml" 53 1220 1226 "main.ml" 53 1220 1231
type(
  int
)
"main.ml" 53 1220 1232 "main.ml" 53 1220 1236
type(
  Knorm.kexp
)
ident(
  int_ref tast "main.ml" 51 1128 1136 "main.ml" 51 1128 1140
)
"main.ml" 53 1220 1224 "main.ml" 53 1220 1236
call(
  tail
)
type(
  Knorm.kexp
)
"main.ml" 52 1163 1202 "main.ml" 53 1220 1236
type(
  Knorm.kexp
)
"main.ml" 52 1163 1167 "main.ml" 53 1220 1236
type(
  Knorm.kexp
)
"main.ml" 50 1109 1126 "main.ml" 54 1237 1241
type(
  Knorm.kexp
)
"main.ml" 54 1237 1247 "main.ml" 54 1237 1251
type(
  Knorm.kexp
)
ident(
  int_ref nast "main.ml" 49 1087 1101 "main.ml" 49 1087 1105
)
"main.ml" 50 1109 1112 "main.ml" 54 1237 1251
type(
  Knorm.kexp
)
"main.ml" 56 1257 1260 "main.ml" 56 1257 1261
type(
  int -> Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref f "main.ml" 49 1087 1097 "main.ml" 49 1087 1098
)
"main.ml" 56 1257 1262 "main.ml" 56 1257 1263
type(
  int
)
"main.ml" 56 1257 1264 "main.ml" 56 1257 1267
type(
  Knorm.kexp
)
ident(
  int_ref ast "main.ml" 47 1033 1044 "main.ml" 47 1033 1047
)
"main.ml" 56 1257 1260 "main.ml" 56 1257 1267
call(
  tail
)
type(
  Knorm.kexp
)
"main.ml" 48 1051 1085 "main.ml" 57 1268 1270
type(
  Knorm.kexp
)
"main.ml" 48 1051 1052 "main.ml" 57 1268 1270
type(
  Knorm.kexp
)
"main.ml" 60 1281 1285 "main.ml" 60 1281 1289
type(
  int
)
ident(
  def argc "main.ml" 61 1317 1317 "main.ml" 133 3777 3778
)
"main.ml" 60 1281 1292 "main.ml" 60 1281 1304
type(
  string array -> int
)
ident(
  ext_ref Array.length
)
"main.ml" 60 1281 1305 "main.ml" 60 1281 1313
type(
  string array
)
ident(
  ext_ref Sys.argv
)
"main.ml" 60 1281 1292 "main.ml" 60 1281 1313
type(
  int
)
"main.ml" 61 1317 1320 "main.ml" 61 1317 1324
type(
  int
)
ident(
  int_ref argc "main.ml" 60 1281 1285 "main.ml" 60 1281 1289
)
"main.ml" 61 1317 1325 "main.ml" 61 1317 1327
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <= )
)
"main.ml" 61 1317 1328 "main.ml" 61 1317 1329
type(
  int
)
"main.ml" 61 1317 1320 "main.ml" 61 1317 1329
type(
  bool
)
"main.ml" 62 1337 1338 "main.ml" 62 1337 1351
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 62 1337 1352 "main.ml" 62 1337 1374
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 62 1337 1375 "main.ml" 62 1337 1383
type(
  string array
)
ident(
  ext_ref Sys.argv
)
"main.ml" 62 1337 1385 "main.ml" 62 1337 1386
type(
  int
)
"main.ml" 62 1337 1375 "main.ml" 62 1337 1387
type(
  string
)
"main.ml" 61 1317 1335 "main.ml" 63 1388 1389
call(
  stack
)
type(
  unit
)
"main.ml" 64 1397 1402 "main.ml" 64 1397 1407
type(
  string list ref
)
ident(
  def files "main.ml" 65 1440 1441 "main.ml" 132 3773 3776
)
"main.ml" 64 1397 1411 "main.ml" 64 1397 1414
type(
  string list -> string list ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 64 1397 1415 "main.ml" 64 1397 1417
type(
  string list
)
"main.ml" 64 1397 1411 "main.ml" 64 1397 1417
type(
  string list ref
)
type(
  string list ref
)
"main.ml" 65 1440 1441 "main.ml" 65 1440 1450
type(
  (Arg.key * Arg.spec * Arg.doc) list ->
  Arg.anon_fun -> Arg.usage_msg -> unit
)
ident(
  ext_ref Arg.parse
)
"main.ml" 66 1453 1456 "main.ml" 66 1453 1464
type(
  Arg.key
)
"main.ml" 66 1453 1473 "main.ml" 66 1453 1478
type(
  bool ref
)
ident(
  ext_ref Main_option.nolib
)
"main.ml" 66 1453 1465 "main.ml" 66 1453 1478
type(
  Arg.spec
)
"main.ml" 66 1453 1479 "main.ml" 66 1453 1502
type(
  Arg.doc
)
"main.ml" 66 1453 1455 "main.ml" 66 1453 1503
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 67 1505 1508 "main.ml" 67 1505 1512
type(
  Arg.key
)
"main.ml" 67 1505 1521 "main.ml" 67 1505 1528
type(
  bool ref
)
ident(
  ext_ref Main_option.verbose
)
"main.ml" 67 1505 1513 "main.ml" 67 1505 1528
type(
  Arg.spec
)
"main.ml" 67 1505 1529 "main.ml" 67 1505 1549
type(
  Arg.doc
)
"main.ml" 67 1505 1507 "main.ml" 67 1505 1550
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 68 1552 1555 "main.ml" 68 1552 1559
type(
  Arg.key
)
"main.ml" 68 1552 1568 "main.ml" 68 1552 1576
type(
  bool ref
)
ident(
  ext_ref Main_option.tortesia
)
"main.ml" 68 1552 1560 "main.ml" 68 1552 1576
type(
  Arg.spec
)
"main.ml" 68 1552 1577 "main.ml" 68 1552 1599
type(
  Arg.doc
)
"main.ml" 68 1552 1554 "main.ml" 68 1552 1600
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 69 1602 1605 "main.ml" 69 1602 1609
type(
  Arg.key
)
"main.ml" 69 1602 1618 "main.ml" 69 1602 1625
type(
  bool ref
)
ident(
  ext_ref Main_option.windows
)
"main.ml" 69 1602 1610 "main.ml" 69 1602 1625
type(
  Arg.spec
)
"main.ml" 69 1602 1626 "main.ml" 69 1602 1651
type(
  Arg.doc
)
"main.ml" 69 1602 1604 "main.ml" 69 1602 1652
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 70 1654 1657 "main.ml" 70 1654 1661
type(
  Arg.key
)
"main.ml" 70 1654 1670 "main.ml" 70 1654 1679
type(
  bool ref
)
ident(
  ext_ref Main_option.debugmode
)
"main.ml" 70 1654 1662 "main.ml" 70 1654 1679
type(
  Arg.spec
)
"main.ml" 70 1654 1680 "main.ml" 70 1654 1699
type(
  Arg.doc
)
"main.ml" 70 1654 1656 "main.ml" 70 1654 1700
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 71 1702 1705 "main.ml" 71 1702 1713
type(
  Arg.key
)
"main.ml" 71 1702 1722 "main.ml" 71 1702 1736
type(
  bool ref
)
ident(
  ext_ref Main_option.nooptimization
)
"main.ml" 71 1702 1714 "main.ml" 71 1702 1736
type(
  Arg.spec
)
"main.ml" 71 1702 1737 "main.ml" 71 1702 1756
type(
  Arg.doc
)
"main.ml" 71 1702 1704 "main.ml" 71 1702 1757
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 72 1759 1762 "main.ml" 72 1759 1773
type(
  Arg.key
)
"main.ml" 72 1759 1782 "main.ml" 72 1759 1790
type(
  bool ref
)
ident(
  ext_ref Main_option.noinline
)
"main.ml" 72 1759 1774 "main.ml" 72 1759 1790
type(
  Arg.spec
)
"main.ml" 72 1759 1791 "main.ml" 72 1759 1806
type(
  Arg.doc
)
"main.ml" 72 1759 1761 "main.ml" 72 1759 1807
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 73 1809 1812 "main.ml" 73 1809 1816
type(
  Arg.key
)
"main.ml" 73 1809 1832 "main.ml" 73 1809 1847
type(
  string ref
)
ident(
  ext_ref Main_option.output_filename
)
"main.ml" 73 1809 1817 "main.ml" 73 1809 1847
type(
  Arg.spec
)
"main.ml" 73 1809 1848 "main.ml" 73 1809 1865
type(
  Arg.doc
)
"main.ml" 73 1809 1811 "main.ml" 73 1809 1866
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 74 1868 1871 "main.ml" 74 1868 1877
type(
  Arg.key
)
"main.ml" 74 1868 1886 "main.ml" 74 1868 1899
type(
  bool ref
)
ident(
  ext_ref Main_option.asmsin_asmint
)
"main.ml" 74 1868 1878 "main.ml" 74 1868 1899
type(
  Arg.spec
)
"main.ml" 74 1868 1900 "main.ml" 74 1868 1936
type(
  Arg.doc
)
"main.ml" 74 1868 1870 "main.ml" 74 1868 1937
type(
  Arg.key * Arg.spec * Arg.doc
)
"main.ml" 65 1440 1451 "main.ml" 75 1939 1941
type(
  (Arg.key * Arg.spec * Arg.doc) list
)
"main.ml" 75 1939 1947 "main.ml" 75 1939 1949
type(
  string
)
ident(
  def fn "main.ml" 75 1939 1953 "main.ml" 75 1939 1977
)
"main.ml" 75 1939 1953 "main.ml" 75 1939 1958
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 75 1939 1959 "main.ml" 75 1939 1961
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 75 1939 1963 "main.ml" 75 1939 1964
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 75 1939 1964 "main.ml" 75 1939 1969
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 75 1939 1962 "main.ml" 75 1939 1970
type(
  string list
)
"main.ml" 75 1939 1971 "main.ml" 75 1939 1972
type(
  string list -> string list -> string list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 75 1939 1974 "main.ml" 75 1939 1976
type(
  string
)
ident(
  int_ref fn "main.ml" 75 1939 1947 "main.ml" 75 1939 1949
)
"main.ml" 75 1939 1973 "main.ml" 75 1939 1977
type(
  string list
)
"main.ml" 75 1939 1962 "main.ml" 75 1939 1977
call(
  stack
)
type(
  string list
)
"main.ml" 75 1939 1953 "main.ml" 75 1939 1977
type(
  unit
)
"main.ml" 75 1939 1942 "main.ml" 75 1939 1978
type(
  Arg.anon_fun
)
"main.ml" 75 1939 1980 "main.ml" 75 1939 1994
type(
  (string -> Arg.usage_msg, unit, Arg.usage_msg) format ->
  string -> Arg.usage_msg
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 75 1939 1995 "main.ml" 75 1939 2017
type(
  (string -> Arg.usage_msg, unit, Arg.usage_msg) format
)
"main.ml" 75 1939 2018 "main.ml" 75 1939 2026
type(
  string array
)
ident(
  ext_ref Sys.argv
)
"main.ml" 75 1939 2028 "main.ml" 75 1939 2029
type(
  int
)
"main.ml" 75 1939 2018 "main.ml" 75 1939 2030
type(
  string
)
"main.ml" 75 1939 1979 "main.ml" 75 1939 2031
call(
  stack
)
type(
  Arg.usage_msg
)
"main.ml" 65 1440 1441 "main.ml" 75 1939 2031
call(
  stack
)
type(
  unit
)
"main.ml" 76 2033 2038 "main.ml" 76 2033 2041
type(
  Syntax.decl
)
ident(
  def ast "main.ml" 77 2079 2080 "main.ml" 132 3773 3776
)
"main.ml" 76 2033 2044 "main.ml" 76 2033 2058
type(
  string -> Syntax.decl
)
ident(
  ext_ref Source2ast.s2a
)
"main.ml" 76 2033 2060 "main.ml" 76 2033 2067
type(
  string list -> string
)
ident(
  ext_ref List.hd
)
"main.ml" 76 2033 2068 "main.ml" 76 2033 2069
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 76 2033 2069 "main.ml" 76 2033 2074
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 76 2033 2068 "main.ml" 76 2033 2074
type(
  string list
)
"main.ml" 76 2033 2059 "main.ml" 76 2033 2075
call(
  stack
)
type(
  string
)
"main.ml" 76 2033 2044 "main.ml" 76 2033 2075
call(
  stack
)
type(
  Syntax.decl
)
"main.ml" 77 2079 2080 "main.ml" 77 2079 2085
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 77 2079 2086 "main.ml" 77 2079 2088
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 78 2091 2096 "main.ml" 78 2091 2097
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 78 2091 2097 "main.ml" 78 2091 2102
type(
  bool ref
)
ident(
  ext_ref Main_option.nolib
)
"main.ml" 78 2091 2096 "main.ml" 78 2091 2102
type(
  bool
)
"main.ml" 78 2091 2108 "main.ml" 78 2091 2110
type(
  string list
)
"main.ml" 79 2111 2121 "main.ml" 79 2111 2122
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 79 2111 2122 "main.ml" 79 2111 2130
type(
  bool ref
)
ident(
  ext_ref Main_option.tortesia
)
"main.ml" 79 2111 2121 "main.ml" 79 2111 2130
type(
  bool
)
"main.ml" 80 2138 2144 "main.ml" 80 2138 2145
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 80 2138 2145 "main.ml" 80 2138 2158
type(
  bool ref
)
ident(
  ext_ref Main_option.asmsin_asmint
)
"main.ml" 80 2138 2144 "main.ml" 80 2138 2158
type(
  bool
)
"main.ml" 80 2138 2165 "main.ml" 80 2138 2182
type(
  string
)
"main.ml" 80 2138 2164 "main.ml" 80 2138 2183
type(
  string list
)
"main.ml" 81 2185 2194 "main.ml" 81 2185 2211
type(
  string
)
"main.ml" 81 2185 2213 "main.ml" 81 2185 2228
type(
  string
)
"main.ml" 81 2185 2193 "main.ml" 81 2185 2229
type(
  string list
)
"main.ml" 79 2111 2136 "main.ml" 82 2230 2233
type(
  string list
)
"main.ml" 83 2235 2243 "main.ml" 83 2235 2251
type(
  string
)
"main.ml" 83 2235 2242 "main.ml" 83 2235 2252
type(
  string list
)
"main.ml" 79 2111 2118 "main.ml" 83 2235 2252
type(
  string list
)
"main.ml" 77 2079 2089 "main.ml" 84 2253 2255
type(
  string list
)
"main.ml" 84 2253 2256 "main.ml" 84 2253 2257
type(
  string list -> string list -> string list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 84 2253 2259 "main.ml" 84 2253 2266
type(
  string list -> string list
)
ident(
  ext_ref List.tl
)
"main.ml" 84 2253 2267 "main.ml" 84 2253 2268
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 84 2253 2268 "main.ml" 84 2253 2273
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 84 2253 2267 "main.ml" 84 2253 2273
type(
  string list
)
"main.ml" 84 2253 2258 "main.ml" 84 2253 2274
call(
  stack
)
type(
  string list
)
"main.ml" 77 2079 2089 "main.ml" 84 2253 2274
call(
  stack
)
type(
  string list
)
"main.ml" 77 2079 2080 "main.ml" 84 2253 2274
type(
  unit
)
"main.ml" 85 2276 2281 "main.ml" 85 2276 2289
type(
  Syntax.decl list
)
ident(
  def globasts "main.ml" 86 2328 2329 "main.ml" 132 3773 3776
)
"main.ml" 85 2276 2292 "main.ml" 85 2276 2300
type(
  (string -> Syntax.decl) -> string list -> Syntax.decl list
)
ident(
  ext_ref List.map
)
"main.ml" 85 2276 2301 "main.ml" 85 2276 2315
type(
  string -> Syntax.decl
)
ident(
  ext_ref Source2ast.s2a
)
"main.ml" 85 2276 2317 "main.ml" 85 2276 2318
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 85 2276 2318 "main.ml" 85 2276 2323
type(
  string list ref
)
ident(
  int_ref files "main.ml" 64 1397 1402 "main.ml" 64 1397 1407
)
"main.ml" 85 2276 2316 "main.ml" 85 2276 2324
type(
  string list
)
"main.ml" 85 2276 2292 "main.ml" 85 2276 2324
call(
  stack
)
type(
  Syntax.decl list
)
"main.ml" 86 2328 2333 "main.ml" 86 2328 2337
type(
  Syntax.expr
)
ident(
  def tast "main.ml" 96 2652 2653 "main.ml" 132 3773 3776
)
"main.ml" 86 2328 2346 "main.ml" 86 2328 2349
type(
  Syntax.decl
)
ident(
  int_ref ast "main.ml" 76 2033 2038 "main.ml" 76 2033 2041
)
"main.ml" 87 2355 2364 "main.ml" 87 2355 2368
type(
  Syntax.expr
)
ident(
  def east "main.ml" 87 2355 2372 "main.ml" 93 2571 2574
)
"main.ml" 87 2355 2358 "main.ml" 87 2355 2368
type(
  Syntax.decl
)
"main.ml" 88 2374 2376 "main.ml" 88 2374 2391
type(
  (Syntax.decl -> Syntax.expr -> Syntax.expr) ->
  Syntax.decl list -> Syntax.expr -> Syntax.expr
)
ident(
  ext_ref List.fold_right
)
"main.ml" 88 2374 2397 "main.ml" 88 2374 2401
type(
  Syntax.decl
)
ident(
  def gast "main.ml" 88 2374 2405 "main.ml" 91 2504 2550
)
"main.ml" 88 2374 2409 "main.ml" 88 2374 2411
type(
  Syntax.expr
)
ident(
  def gr "main.ml" 89 2416 2420 "main.ml" 91 2504 2550
)
"main.ml" 89 2416 2426 "main.ml" 89 2416 2430
type(
  Syntax.decl
)
ident(
  int_ref gast "main.ml" 88 2374 2397 "main.ml" 88 2374 2401
)
"main.ml" 90 2436 2448 "main.ml" 90 2436 2450
type(
  (Syntax.expr -> Syntax.expr) list
)
ident(
  def xs "main.ml" 90 2436 2454 "main.ml" 90 2436 2503
)
"main.ml" 90 2436 2442 "main.ml" 90 2436 2450
type(
  Syntax.decl
)
"main.ml" 90 2436 2455 "main.ml" 90 2436 2470
type(
  ((Syntax.expr -> Syntax.expr) -> Syntax.expr -> Syntax.expr) ->
  (Syntax.expr -> Syntax.expr) list -> Syntax.expr -> Syntax.expr
)
ident(
  ext_ref List.fold_right
)
"main.ml" 90 2436 2476 "main.ml" 90 2436 2477
type(
  Syntax.expr -> Syntax.expr
)
ident(
  def f "main.ml" 90 2436 2481 "main.ml" 90 2436 2495
)
"main.ml" 90 2436 2485 "main.ml" 90 2436 2486
type(
  Syntax.expr
)
ident(
  def r "main.ml" 90 2436 2490 "main.ml" 90 2436 2495
)
"main.ml" 90 2436 2491 "main.ml" 90 2436 2492
type(
  Syntax.expr -> Syntax.expr
)
ident(
  int_ref f "main.ml" 90 2436 2476 "main.ml" 90 2436 2477
)
"main.ml" 90 2436 2493 "main.ml" 90 2436 2494
type(
  Syntax.expr
)
ident(
  int_ref r "main.ml" 90 2436 2485 "main.ml" 90 2436 2486
)
"main.ml" 90 2436 2490 "main.ml" 90 2436 2495
call(
  tail
)
type(
  Syntax.expr
)
"main.ml" 90 2436 2481 "main.ml" 90 2436 2495
type(
  Syntax.expr -> Syntax.expr
)
"main.ml" 90 2436 2471 "main.ml" 90 2436 2496
type(
  (Syntax.expr -> Syntax.expr) -> Syntax.expr -> Syntax.expr
)
"main.ml" 90 2436 2497 "main.ml" 90 2436 2499
type(
  (Syntax.expr -> Syntax.expr) list
)
ident(
  int_ref xs "main.ml" 90 2436 2448 "main.ml" 90 2436 2450
)
"main.ml" 90 2436 2500 "main.ml" 90 2436 2502
type(
  Syntax.expr
)
ident(
  int_ref gr "main.ml" 88 2374 2409 "main.ml" 88 2374 2411
)
"main.ml" 90 2436 2454 "main.ml" 90 2436 2503
call(
  tail
)
type(
  Syntax.expr
)
"main.ml" 91 2504 2510 "main.ml" 91 2504 2511
type(
  Syntax.decl
)
"main.ml" 91 2504 2515 "main.ml" 91 2504 2520
type(
  exn -> Syntax.expr
)
ident(
  ext_ref Pervasives.raise
)
"main.ml" 91 2504 2530 "main.ml" 91 2504 2549
type(
  string
)
"main.ml" 91 2504 2521 "main.ml" 91 2504 2550
type(
  exn
)
"main.ml" 91 2504 2515 "main.ml" 91 2504 2550
type(
  Syntax.expr
)
"main.ml" 89 2416 2420 "main.ml" 91 2504 2550
type(
  Syntax.expr
)
"main.ml" 88 2374 2405 "main.ml" 91 2504 2550
type(
  Syntax.expr -> Syntax.expr
)
"main.ml" 88 2374 2392 "main.ml" 92 2551 2555
type(
  Syntax.decl -> Syntax.expr -> Syntax.expr
)
"main.ml" 92 2551 2556 "main.ml" 92 2551 2564
type(
  Syntax.decl list
)
ident(
  int_ref globasts "main.ml" 85 2276 2281 "main.ml" 85 2276 2289
)
"main.ml" 92 2551 2565 "main.ml" 92 2551 2569
type(
  Syntax.expr
)
ident(
  int_ref east "main.ml" 87 2355 2364 "main.ml" 87 2355 2368
)
"main.ml" 87 2355 2372 "main.ml" 93 2571 2574
call(
  stack
)
type(
  Syntax.expr
)
"main.ml" 94 2575 2578 "main.ml" 94 2575 2579
type(
  Syntax.decl
)
"main.ml" 94 2575 2583 "main.ml" 94 2575 2588
type(
  exn -> Syntax.expr
)
ident(
  ext_ref Pervasives.raise
)
"main.ml" 94 2575 2598 "main.ml" 94 2575 2622
type(
  string
)
"main.ml" 94 2575 2589 "main.ml" 94 2575 2623
type(
  exn
)
"main.ml" 94 2575 2583 "main.ml" 94 2575 2623
type(
  Syntax.expr
)
"main.ml" 86 2328 2340 "main.ml" 94 2575 2623
type(
  Syntax.expr
)
"main.ml" 96 2652 2653 "main.ml" 96 2652 2665
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 96 2652 2666 "main.ml" 96 2652 2674
type(
  string
)
"main.ml" 96 2652 2653 "main.ml" 96 2652 2674
call(
  stack
)
type(
  unit
)
"main.ml" 96 2652 2676 "main.ml" 96 2652 2689
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 96 2652 2690 "main.ml" 96 2652 2692
type(
  unit
)
"main.ml" 96 2652 2676 "main.ml" 96 2652 2692
call(
  stack
)
type(
  unit
)
"main.ml" 97 2694 2699 "main.ml" 97 2694 2703
type(
  Type_checker.texp
)
ident(
  def ast2 "main.ml" 98 2733 2734 "main.ml" 132 3773 3776
)
"main.ml" 97 2694 2706 "main.ml" 97 2694 2724
type(
  Syntax.expr -> Type_checker.texp
)
ident(
  ext_ref Type_checker.check
)
"main.ml" 97 2694 2725 "main.ml" 97 2694 2729
type(
  Syntax.expr
)
ident(
  int_ref tast "main.ml" 86 2328 2333 "main.ml" 86 2328 2337
)
"main.ml" 97 2694 2706 "main.ml" 97 2694 2729
call(
  stack
)
type(
  Type_checker.texp
)
"main.ml" 98 2733 2734 "main.ml" 98 2733 2746
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 98 2733 2747 "main.ml" 98 2733 2754
type(
  string
)
"main.ml" 98 2733 2734 "main.ml" 98 2733 2754
call(
  stack
)
type(
  unit
)
"main.ml" 98 2733 2757 "main.ml" 98 2733 2770
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 98 2733 2771 "main.ml" 98 2733 2773
type(
  unit
)
"main.ml" 98 2733 2757 "main.ml" 98 2733 2773
call(
  stack
)
type(
  unit
)
"main.ml" 99 2775 2780 "main.ml" 99 2775 2782
type(
  Knorm.kexp
)
ident(
  def kn "main.ml" 100 2827 2828 "main.ml" 132 3773 3776
)
"main.ml" 99 2775 2785 "main.ml" 99 2775 2801
type(
  Knorm.kexp -> (string * string) list -> Knorm.kexp
)
ident(
  ext_ref Alpha.alpha_conv
)
"main.ml" 99 2775 2803 "main.ml" 99 2775 2814
type(
  Type_checker.texp -> Knorm.kexp
)
ident(
  ext_ref Knorm.knorm
)
"main.ml" 99 2775 2815 "main.ml" 99 2775 2819
type(
  Type_checker.texp
)
ident(
  int_ref ast2 "main.ml" 97 2694 2699 "main.ml" 97 2694 2703
)
"main.ml" 99 2775 2802 "main.ml" 99 2775 2820
call(
  stack
)
type(
  Knorm.kexp
)
"main.ml" 99 2775 2821 "main.ml" 99 2775 2823
type(
  (string * string) list
)
"main.ml" 99 2775 2785 "main.ml" 99 2775 2823
call(
  stack
)
type(
  Knorm.kexp
)
"main.ml" 100 2827 2828 "main.ml" 100 2827 2840
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 100 2827 2841 "main.ml" 100 2827 2866
type(
  string
)
"main.ml" 100 2827 2828 "main.ml" 100 2827 2866
call(
  stack
)
type(
  unit
)
"main.ml" 100 2827 2869 "main.ml" 100 2827 2882
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 100 2827 2883 "main.ml" 100 2827 2885
type(
  unit
)
"main.ml" 100 2827 2869 "main.ml" 100 2827 2885
call(
  stack
)
type(
  unit
)
"main.ml" 101 2887 2888 "main.ml" 101 2887 2894
type(
  (Knorm.kexp -> string) -> Knorm.kexp -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 101 2887 2895 "main.ml" 101 2887 2904
type(
  Knorm.kexp -> string
)
ident(
  ext_ref Knorm.knorm2str
)
"main.ml" 101 2887 2905 "main.ml" 101 2887 2907
type(
  Knorm.kexp
)
ident(
  int_ref kn "main.ml" 99 2775 2780 "main.ml" 99 2775 2782
)
"main.ml" 101 2887 2888 "main.ml" 101 2887 2907
call(
  stack
)
type(
  unit
)
"main.ml" 102 2909 2914 "main.ml" 102 2909 2917
type(
  Knorm.kexp
)
ident(
  def dkn "main.ml" 103 2953 2954 "main.ml" 132 3773 3776
)
"main.ml" 102 2909 2920 "main.ml" 102 2909 2946
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  ext_ref Lettuple2dest.lettupledest
)
"main.ml" 102 2909 2947 "main.ml" 102 2909 2949
type(
  Knorm.kexp
)
ident(
  int_ref kn "main.ml" 99 2775 2780 "main.ml" 99 2775 2782
)
"main.ml" 102 2909 2920 "main.ml" 102 2909 2949
call(
  stack
)
type(
  Knorm.kexp
)
"main.ml" 103 2953 2954 "main.ml" 103 2953 2966
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 103 2953 2967 "main.ml" 103 2953 2985
type(
  string
)
"main.ml" 103 2953 2954 "main.ml" 103 2953 2985
call(
  stack
)
type(
  unit
)
"main.ml" 103 2953 2988 "main.ml" 103 2953 3001
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 103 2953 3002 "main.ml" 103 2953 3004
type(
  unit
)
"main.ml" 103 2953 2988 "main.ml" 103 2953 3004
call(
  stack
)
type(
  unit
)
"main.ml" 104 3006 3007 "main.ml" 104 3006 3013
type(
  (Knorm.kexp -> string) -> Knorm.kexp -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 104 3006 3014 "main.ml" 104 3006 3023
type(
  Knorm.kexp -> string
)
ident(
  ext_ref Knorm.knorm2str
)
"main.ml" 104 3006 3024 "main.ml" 104 3006 3027
type(
  Knorm.kexp
)
ident(
  int_ref dkn "main.ml" 102 2909 2914 "main.ml" 102 2909 2917
)
"main.ml" 104 3006 3007 "main.ml" 104 3006 3027
call(
  stack
)
type(
  unit
)
"main.ml" 105 3029 3034 "main.ml" 105 3029 3037
type(
  Knorm.kexp
)
ident(
  def tkn "main.ml" 106 3054 3055 "main.ml" 132 3773 3776
)
"main.ml" 105 3029 3040 "main.ml" 105 3029 3046
type(
  Knorm.kexp -> Knorm.kexp
)
ident(
  int_ref reduce "main.ml" 47 1033 1037 "main.ml" 47 1033 1043
)
"main.ml" 105 3029 3047 "main.ml" 105 3029 3050
type(
  Knorm.kexp
)
ident(
  int_ref dkn "main.ml" 102 2909 2914 "main.ml" 102 2909 2917
)
"main.ml" 105 3029 3040 "main.ml" 105 3029 3050
call(
  stack
)
type(
  Knorm.kexp
)
"main.ml" 106 3054 3055 "main.ml" 106 3054 3067
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 106 3054 3068 "main.ml" 106 3054 3077
type(
  string
)
"main.ml" 106 3054 3055 "main.ml" 106 3054 3077
call(
  stack
)
type(
  unit
)
"main.ml" 106 3054 3080 "main.ml" 106 3054 3093
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 106 3054 3094 "main.ml" 106 3054 3096
type(
  unit
)
"main.ml" 106 3054 3080 "main.ml" 106 3054 3096
call(
  stack
)
type(
  unit
)
"main.ml" 107 3098 3099 "main.ml" 107 3098 3105
type(
  (Knorm.kexp -> string) -> Knorm.kexp -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 107 3098 3106 "main.ml" 107 3098 3115
type(
  Knorm.kexp -> string
)
ident(
  ext_ref Knorm.knorm2str
)
"main.ml" 107 3098 3116 "main.ml" 107 3098 3119
type(
  Knorm.kexp
)
ident(
  int_ref tkn "main.ml" 105 3029 3034 "main.ml" 105 3029 3037
)
"main.ml" 107 3098 3099 "main.ml" 107 3098 3119
call(
  stack
)
type(
  unit
)
"main.ml" 113 3232 3237 "main.ml" 113 3232 3241
type(
  Knorm.kexp
)
ident(
  def ttkn "main.ml" 114 3251 3252 "main.ml" 132 3773 3776
)
"main.ml" 113 3232 3244 "main.ml" 113 3232 3247
type(
  Knorm.kexp
)
ident(
  int_ref tkn "main.ml" 105 3029 3034 "main.ml" 105 3029 3037
)
"main.ml" 114 3251 3256 "main.ml" 114 3251 3259
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp
)
ident(
  def cls "main.ml" 115 3288 3289 "main.ml" 132 3773 3776
)
"main.ml" 114 3251 3262 "main.ml" 114 3251 3279
type(
  Knorm.kexp ->
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp
)
ident(
  ext_ref Closure_conv.conv
)
"main.ml" 114 3251 3280 "main.ml" 114 3251 3284
type(
  Knorm.kexp
)
ident(
  int_ref ttkn "main.ml" 113 3232 3237 "main.ml" 113 3232 3241
)
"main.ml" 114 3251 3262 "main.ml" 114 3251 3284
call(
  stack
)
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp
)
"main.ml" 115 3288 3289 "main.ml" 115 3288 3301
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 115 3288 3302 "main.ml" 115 3288 3321
type(
  string
)
"main.ml" 115 3288 3289 "main.ml" 115 3288 3321
call(
  stack
)
type(
  unit
)
"main.ml" 115 3288 3324 "main.ml" 115 3288 3337
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 115 3288 3338 "main.ml" 115 3288 3340
type(
  unit
)
"main.ml" 115 3288 3324 "main.ml" 115 3288 3340
call(
  stack
)
type(
  unit
)
"main.ml" 116 3342 3343 "main.ml" 116 3342 3349
type(
  ((Closure_conv.name * Closure_conv.globdef) list * string list *
   Closure_conv.cexp -> string) ->
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 116 3342 3350 "main.ml" 116 3342 3358
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp -> string
)
ident(
  ext_ref Closure_conv.clos2str
)
"main.ml" 116 3342 3359 "main.ml" 116 3342 3362
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp
)
ident(
  int_ref cls "main.ml" 114 3251 3256 "main.ml" 114 3251 3259
)
"main.ml" 116 3342 3343 "main.ml" 116 3342 3362
call(
  stack
)
type(
  unit
)
"main.ml" 117 3364 3369 "main.ml" 117 3364 3372
type(
  Virtual.virtglobdef list * Virtual.funbody * string list
)
ident(
  def vrt "main.ml" 118 3401 3402 "main.ml" 132 3773 3776
)
"main.ml" 117 3364 3375 "main.ml" 117 3364 3393
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp ->
  Virtual.virtglobdef list * Virtual.funbody * string list
)
ident(
  ext_ref Virtual.to_virtual
)
"main.ml" 117 3364 3394 "main.ml" 117 3364 3397
type(
  (Closure_conv.name * Closure_conv.globdef) list * string list *
  Closure_conv.cexp
)
ident(
  int_ref cls "main.ml" 114 3251 3256 "main.ml" 114 3251 3259
)
"main.ml" 117 3364 3375 "main.ml" 117 3364 3397
call(
  stack
)
type(
  Virtual.virtglobdef list * Virtual.funbody * string list
)
"main.ml" 118 3401 3402 "main.ml" 118 3401 3414
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 118 3401 3415 "main.ml" 118 3401 3428
type(
  string
)
"main.ml" 118 3401 3402 "main.ml" 118 3401 3428
call(
  stack
)
type(
  unit
)
"main.ml" 118 3401 3431 "main.ml" 118 3401 3444
type(
  unit -> unit
)
ident(
  ext_ref Pervasives.print_newline
)
"main.ml" 118 3401 3445 "main.ml" 118 3401 3447
type(
  unit
)
"main.ml" 118 3401 3431 "main.ml" 118 3401 3447
call(
  stack
)
type(
  unit
)
"main.ml" 119 3449 3450 "main.ml" 119 3449 3456
type(
  (Virtual.virtglobdef list * Virtual.funbody * string list -> string) ->
  Virtual.virtglobdef list * Virtual.funbody * string list -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 119 3449 3457 "main.ml" 119 3449 3465
type(
  Virtual.virtglobdef list * Virtual.funbody * string list -> string
)
ident(
  ext_ref Virtual.virt2str
)
"main.ml" 119 3449 3466 "main.ml" 119 3449 3469
type(
  Virtual.virtglobdef list * Virtual.funbody * string list
)
ident(
  int_ref vrt "main.ml" 117 3364 3369 "main.ml" 117 3364 3372
)
"main.ml" 119 3449 3450 "main.ml" 119 3449 3469
call(
  stack
)
type(
  unit
)
"main.ml" 120 3471 3476 "main.ml" 120 3471 3479
type(
  string
)
ident(
  def asm "main.ml" 125 3577 3578 "main.ml" 132 3773 3776
)
"main.ml" 120 3471 3486 "main.ml" 120 3471 3487
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 120 3471 3487 "main.ml" 120 3471 3495
type(
  bool ref
)
ident(
  ext_ref Main_option.tortesia
)
"main.ml" 120 3471 3486 "main.ml" 120 3471 3495
type(
  bool
)
"main.ml" 121 3502 3504 "main.ml" 121 3502 3531
type(
  Virtual.virtglobdef list * Virtual.funbody * string list -> string
)
ident(
  ext_ref Emit_zatsu_tortesia.vir2asm
)
"main.ml" 121 3502 3532 "main.ml" 121 3502 3535
type(
  Virtual.virtglobdef list * Virtual.funbody * string list
)
ident(
  int_ref vrt "main.ml" 117 3364 3369 "main.ml" 117 3364 3372
)
"main.ml" 121 3502 3504 "main.ml" 121 3502 3535
call(
  stack
)
type(
  string
)
"main.ml" 123 3543 3545 "main.ml" 123 3543 3567
type(
  Virtual.virtglobdef list * Virtual.funbody * string list -> string
)
ident(
  ext_ref Emit_zatsu_x86.vir2asm
)
"main.ml" 123 3543 3568 "main.ml" 123 3543 3571
type(
  Virtual.virtglobdef list * Virtual.funbody * string list
)
ident(
  int_ref vrt "main.ml" 117 3364 3369 "main.ml" 117 3364 3372
)
"main.ml" 123 3543 3545 "main.ml" 123 3543 3571
call(
  stack
)
type(
  string
)
"main.ml" 120 3471 3482 "main.ml" 123 3543 3572
type(
  string
)
"main.ml" 125 3577 3578 "main.ml" 125 3577 3584
type(
  (string -> string) -> string -> unit
)
ident(
  ext_ref Main_option.vprint
)
"main.ml" 125 3577 3590 "main.ml" 125 3577 3591
type(
  string
)
ident(
  def x "main.ml" 125 3577 3595 "main.ml" 125 3577 3596
)
"main.ml" 125 3577 3595 "main.ml" 125 3577 3596
type(
  string
)
ident(
  int_ref x "main.ml" 125 3577 3590 "main.ml" 125 3577 3591
)
"main.ml" 125 3577 3585 "main.ml" 125 3577 3597
type(
  string -> string
)
"main.ml" 125 3577 3598 "main.ml" 125 3577 3601
type(
  string
)
ident(
  int_ref asm "main.ml" 120 3471 3476 "main.ml" 120 3471 3479
)
"main.ml" 125 3577 3578 "main.ml" 125 3577 3601
call(
  stack
)
type(
  unit
)
"main.ml" 126 3603 3608 "main.ml" 126 3603 3610
type(
  out_channel
)
ident(
  def oc "main.ml" 127 3642 3643 "main.ml" 132 3773 3776
)
"main.ml" 126 3603 3613 "main.ml" 126 3603 3621
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 126 3603 3622 "main.ml" 126 3603 3623
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 126 3603 3623 "main.ml" 126 3603 3638
type(
  string ref
)
ident(
  ext_ref Main_option.output_filename
)
"main.ml" 126 3603 3622 "main.ml" 126 3603 3638
type(
  string
)
"main.ml" 126 3603 3613 "main.ml" 126 3603 3638
call(
  stack
)
type(
  out_channel
)
"main.ml" 127 3642 3643 "main.ml" 127 3642 3656
type(
  out_channel -> string -> unit
)
ident(
  ext_ref Pervasives.output_string
)
"main.ml" 127 3642 3657 "main.ml" 127 3642 3659
type(
  out_channel
)
ident(
  int_ref oc "main.ml" 126 3603 3608 "main.ml" 126 3603 3610
)
"main.ml" 127 3642 3660 "main.ml" 127 3642 3663
type(
  string
)
ident(
  int_ref asm "main.ml" 120 3471 3476 "main.ml" 120 3471 3479
)
"main.ml" 127 3642 3643 "main.ml" 127 3642 3663
call(
  stack
)
type(
  unit
)
"main.ml" 128 3665 3666 "main.ml" 128 3665 3675
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 128 3665 3676 "main.ml" 128 3665 3678
type(
  out_channel
)
ident(
  int_ref oc "main.ml" 126 3603 3608 "main.ml" 126 3603 3610
)
"main.ml" 128 3665 3666 "main.ml" 128 3665 3678
call(
  stack
)
type(
  unit
)
"main.ml" 132 3773 3774 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 128 3665 3666 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 127 3642 3643 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 126 3603 3604 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 125 3577 3578 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 120 3471 3472 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 119 3449 3450 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 118 3401 3431 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 118 3401 3402 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 117 3364 3365 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 116 3342 3343 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 115 3288 3324 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 115 3288 3289 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 114 3251 3252 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 113 3232 3233 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 107 3098 3099 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 106 3054 3080 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 106 3054 3055 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 105 3029 3030 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 104 3006 3007 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 103 2953 2988 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 103 2953 2954 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 102 2909 2910 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 101 2887 2888 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 100 2827 2869 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 100 2827 2828 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 99 2775 2776 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 98 2733 2757 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 98 2733 2734 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 97 2694 2695 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 96 2652 2676 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 96 2652 2653 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 86 2328 2329 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 85 2276 2277 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 77 2079 2080 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 76 2033 2034 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 65 1440 1441 "main.ml" 132 3773 3776
type(
  unit
)
"main.ml" 63 1388 1395 "main.ml" 133 3777 3778
type(
  unit
)
"main.ml" 61 1317 1317 "main.ml" 133 3777 3778
type(
  unit
)
"main.ml" 60 1281 1281 "main.ml" 133 3777 3778
type(
  unit
)
